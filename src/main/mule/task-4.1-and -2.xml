<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	<flow name="task-4.1Flow" doc:id="dca42c87-3f63-4e9d-b41d-8b2f1553e65a" >
		<scheduler doc:name="Scheduler" doc:id="a1534b07-19fa-4deb-861e-653bcae9ce45" >
			<scheduling-strategy >
				<fixed-frequency frequency="5" timeUnit="MINUTES"/>
			</scheduling-strategy>
		</scheduler>
		<ee:transform doc:name="Set employee Payload and scoreBoard Vars" doc:id="18f3ef9c-0b55-4292-9050-7c317a1897aa" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
   "employee":[
      {
         "id":"A007",
         "first_name":"Jan",
         "last_name":"Doe"
      },
      {
         "id":"A008",
         "first_name":"Ron",
         "l ast_name":"David"
      },
      {
         "id":"A009",
         "first_name":"Jane",
         "last_name":"Kane"
      },
      {
         "id":"A010",
         "first_name":"Marsh",
         "last_name":"Megan"
      },
      {
         "id":"A011",
         "first_name":"Kelly",
         "last_name":"Mitch"
      },
      {
         "id":"A012",
         "first_name":"Chris",
         "last_name":"Vaste"
      }
   ]
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="scoreBoard" ><![CDATA[%dw 2.0
output application/json
---
{
   "scoreBoard":[
      {
         "id":"A007",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            80,
            75,
            89,
            100
         ]
      },
      {
         "id":"A008",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            70,
            85,
            69,
            90
         ]
      },
      {
         "id":" A021",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            90,
            87,
            77,
            95
         ]
      }
   ]
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Transform Message logic to get certificate list" doc:id="ef38db87-2d80-4037-ab56-49c3e9169725">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var inputPayload = payload.employee
var scoreBoardList = vars.scoreBoard.scoreBoard
---
certificate : flatten (scoreBoardList map (score, scoreIndex) -> 	
     inputPayload filter $.id == score.id map {
     	"id": $.id,
         "firstName": $.first_name,
         "LastName": $.last_name,
         "MarksBySubjectWise": (score.subjects map (sub, index) ->
            (score.subjects[index]) : score.score[index]) reduce($$ ++ $)             
})
     
    ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Log List" doc:id="025df9ee-e492-4476-aa46-2a7b9f08a245" message="Log the Certificate List  Task 4.1 :: #[payload]"/>
		<flow-ref doc:name="task-4.2Flow" doc:id="c55231eb-8b5c-4934-83d1-5ca56a437397" name="task-4.2Flow"/>
	
</flow>
	
	<flow name="task-4.2Flow" doc:id="367a27a8-0bab-4074-88d8-b5ae6e8fe8df" >
		<ee:transform doc:name="Set employee Payload and scoreBoard Vars" doc:id="ad5b4460-7bc8-4f07-b78e-7d74aa080ac4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
   "employee":[
      {
         "id":"A007",
         "first_name":"Jan",
         "last_name":"Doe"
      },
      {
         "id":"A008",
         "first_name":"Ron",
         "l ast_name":"David"
      },
      {
         "id":"A009",
         "first_name":"Jane",
         "last_name":"Kane"
      },
      {
         "id":"A010",
         "first_name":"Marsh",
         "last_name":"Megan"
      },
      {
         "id":"A011",
         "first_name":"Kelly",
         "last_name":"Mitch"
      },
      {
         "id":"A012",
         "first_name":"Chris",
         "last_name":"Vaste"
      }
   ]
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="scoreBoard"><![CDATA[%dw 2.0
output application/json
---
{
   "scoreBoard":[
      {
         "id":"A007",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            80,
            75,
            89,
            100
         ]
      },
      {
         "id":"A008",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            70,
            85,
            69,
            90
         ]
      },
      {
         "id":" A021",
         "subjects":[
            "Maths",
            "English",
            "Arts",
            "Drawimgs"
         ],
         "score":[
            90,
            87,
            77,
            95
         ]
      }
   ]
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="894a7e29-dc66-49b2-a14b-b65dd48d2cd2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var inputPayload = payload.employee
var scoreBoardList = vars.scoreBoard.scoreBoard
---
(inputPayload map (v) -> using (id = v.id) 
{	id : id,
	first_name: v.first_name,
	last_name: v.last_name,
	(scoreBoardList filter ($.id contains id) map (sv) -> {
		subjects: sv.subjects,
		score: sv.score
	})
}) filter $.subjects == null]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="5e745e1b-3a35-41bf-bfaa-e41ce3fcf8bb" message="Task 4.2 Response Payload :: #[payload]"/>
	
</flow>
	
</mule>
